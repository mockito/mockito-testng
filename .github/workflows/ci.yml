#
# CI build that assembles artifacts and runs tests.
# If validation is successful this workflow releases from the main dev branch.
#
# - skipping CI: add [skip ci] to the commit message
# - skipping release: add [skip release] to the commit message
#
name: CI

on:
  push:
    branches:
      - master
    tags-ignore:
      - v* # release tags are automatically generated after a successful CI build, no need to run CI against them
  pull_request:
    branches:
      - master

jobs:

  #
  # SINGLE-JOB
  #
  verify:
    runs-on:  ubuntu-latest

    steps:

      - name: 1. Check out code
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      - name: 2. Set up Java 8
        uses: actions/setup-java@v1 # https://github.com/actions/setup-java
        with:
          java-version: 8

      - name: 3. Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1 # https://github.com/gradle/wrapper-validation-action

#      need change in build
#
#      - name: 4. Build and check reproducibility of artifacts
#        run: ./check_reproducibility.sh

  #
  # Main build job
  #
  build:
    needs: [verify]
    runs-on:  ${{ matrix.os }}
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"

    # Definition of the build matrix
    strategy:
      matrix:
        java: [8, 11, 15]
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:

    - name: 1. Check out code
      uses: actions/checkout@v2 # https://github.com/actions/checkout

    - name: 2. Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v1 # https://github.com/actions/setup-java
      with:
        java-version: ${{ matrix.java }}

    - name: 3. Build on ${{ matrix.os }} with Java ${{ matrix.java }}
      run: ./gradlew build idea

  #
  # Release job, only for pushes to the main development branch
  #

# will be activated / implemented after shipkit upgrade

#  release:
#    runs-on: ubuntu-latest
#    needs: [build, verify] # build job must pass before we can release
#
#    if: github.event_name == 'push'
#        && github.ref == 'refs/heads/release/3.x'
#        && !contains(toJSON(github.event.commits.*.message), '[skip release]')
#
#    steps:
#
#    - name: Check out code
#      uses: actions/checkout@v2 # https://github.com/actions/checkout
#      with:
#        fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci
#
#    - name: Set up Java 8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 8
#
#    - name: Build and publish
#      run: ./gradlew bintrayUpload githubRelease --scan
#      env:
#        GH_WRITE_TOKEN: ${{secrets.GH_WRITE_TOKEN}}
#        BINTRAY_API_KEY: ${{secrets.BINTRAY_API_KEY}}
